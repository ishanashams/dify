version: '3'

services:
  # API service
  api:
    image: langgenius/dify-api:0.8.0
    restart: always
    environment:
      MODE: api
      CONSOLE_API_URL: ${CONSOLE_API_URL}
      CONSOLE_WEB_URL: ${CONSOLE_WEB_URL}
      SERVICE_API_URL: ${SERVICE_API_URL}
      APP_API_URL: ${APP_API_URL}
      APP_WEB_URL: ${APP_WEB_URL}
      SECRET_KEY: ${SECRET_KEY}
      INIT_PASSWORD: ${INIT_PASSWORD}
      WEB_API_CORS_ALLOW_ORIGINS: ${WEB_API_CORS_ALLOW_ORIGINS}
      CONSOLE_CORS_ALLOW_ORIGINS: ${CONSOLE_CORS_ALLOW_ORIGINS}
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-difyai123456}
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-dify}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-difyai123456}
      VECTOR_STORE: weaviate
      WEAVIATE_ENDPOINT: http://weaviate:8080
      WEAVIATE_API_KEY: ${WEAVIATE_API_KEY:-WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih}
    depends_on:
      - db
      - redis
      - weaviate
    volumes:
      - ./volumes/app/storage:/app/api/storage
    networks:
      - coolify
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dify-api.rule=Host(`dify.api.kodescraft.com`) || Host(`dify.console.api.kodescraft.com`) || Host(`https://dify.api.app.kodescraft.com`)"
      - "traefik.http.services.dify-api.loadbalancer.server.port=5001"
      - "traefik.http.routers.dify-api.middlewares=dify-cors@file"
      - "traefik.http.routers.dify-api.entrypoints=https"
      - "traefik.http.routers.dify-api.tls=true"

  # worker service
  worker:
    image: langgenius/dify-api:0.8.0
    restart: always
    environment:
      MODE: worker
      CONSOLE_API_URL: ${CONSOLE_API_URL}
      CONSOLE_WEB_URL: ${CONSOLE_WEB_URL}
      SERVICE_API_URL: ${SERVICE_API_URL}
      APP_API_URL: ${APP_API_URL}
      APP_WEB_URL: ${APP_WEB_URL}
      SECRET_KEY: ${SECRET_KEY}
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-difyai123456}
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-dify}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-difyai123456}
      VECTOR_STORE: weaviate
      WEAVIATE_ENDPOINT: http://weaviate:8080
      WEAVIATE_API_KEY: ${WEAVIATE_API_KEY:-WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih}
    depends_on:
      - db
      - redis
      - weaviate
    volumes:
      - ./volumes/app/storage:/app/api/storage
    networks:
      - coolify

  # Frontend web application
  web:
    image: langgenius/dify-web:0.8.0
    restart: always
    environment:
      CONSOLE_API_URL: ${CONSOLE_API_URL}
      APP_API_URL: ${APP_API_URL}
      SENTRY_DSN: ${WEB_SENTRY_DSN:-}
      NEXT_TELEMETRY_DISABLED: ${NEXT_TELEMETRY_DISABLED:-0}
    networks:
      - coolify
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dify-web.rule=Host(`dify.kodescraft.com`)"
      - "traefik.http.services.dify-web.loadbalancer.server.port=3000"
      - "traefik.http.routers.dify-web.middlewares=dify-cors@file"
      - "traefik.http.routers.dify-web.entrypoints=https"
      - "traefik.http.routers.dify-web.tls=true"

  # The postgres database
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-difyai123456}
      POSTGRES_DB: ${DB_DATABASE:-dify}
    volumes:
      - ./volumes/db/data:/var/lib/postgresql/data
    networks:
      - coolify

  # The redis cache
  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - ./volumes/redis/data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD:-difyai123456}
    networks:
      - coolify

  # The DifySandbox
  sandbox:
    image: langgenius/dify-sandbox:0.2.7
    restart: always
    environment:
      API_KEY: ${SANDBOX_API_KEY:-dify-sandbox}
      GIN_MODE: ${SANDBOX_GIN_MODE:-release}
      WORKER_TIMEOUT: ${SANDBOX_WORKER_TIMEOUT:-15}
      ENABLE_NETWORK: ${SANDBOX_ENABLE_NETWORK:-true}
      SANDBOX_PORT: ${SANDBOX_PORT:-8194}
    volumes:
      - ./volumes/sandbox/dependencies:/dependencies
    networks:
      - coolify

  # The Weaviate vector store
  weaviate:
    image: semitechnologies/weaviate:1.19.0
    restart: always
    volumes:
      - ./volumes/weaviate:/var/lib/weaviate
    environment:
      PERSISTENCE_DATA_PATH: ${WEAVIATE_PERSISTENCE_DATA_PATH:-/var/lib/weaviate}
      QUERY_DEFAULTS_LIMIT: ${WEAVIATE_QUERY_DEFAULTS_LIMIT:-25}
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: ${WEAVIATE_AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED:-false}
      DEFAULT_VECTORIZER_MODULE: ${WEAVIATE_DEFAULT_VECTORIZER_MODULE:-none}
      CLUSTER_HOSTNAME: ${WEAVIATE_CLUSTER_HOSTNAME:-node1}
      AUTHENTICATION_APIKEY_ENABLED: ${WEAVIATE_AUTHENTICATION_APIKEY_ENABLED:-true}
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: ${WEAVIATE_API_KEY:-WVF5YThaHlkYwhGUSmCRgsX3tD5ngdN8pkih}
      AUTHENTICATION_APIKEY_USERS: ${WEAVIATE_AUTHENTICATION_APIKEY_USERS:-hello@dify.ai}
      AUTHORIZATION_ADMINLIST_ENABLED: ${WEAVIATE_AUTHORIZATION_ADMINLIST_ENABLED:-true}
      AUTHORIZATION_ADMINLIST_USERS: ${WEAVIATE_AUTHORIZATION_ADMINLIST_USERS:-hello@dify.ai}
    networks:
      - coolify

networks:
  coolify:
    external: true
